# Azure DevOps PR Validation Pipeline
# Fast smoke tests for Pull Request validation
# Runs on: Every Pull Request

pr:
  branches:
    include:
      - main
      - develop
  paths:
    exclude:
      - README.md
      - docs/*
      - '*.md'

trigger: none

variables:
  pythonVersion: '3.11'

jobs:
  - job: PR_Validation
    displayName: 'PR Smoke Tests'
    pool:
      vmImage: 'ubuntu-latest'
    timeoutInMinutes: 15
    
    steps:
      - task: UsePythonVersion@0
        displayName: 'Set Python Version'
        inputs:
          versionSpec: '$(pythonVersion)'
          addToPath: true
      
      - script: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        displayName: 'Install Dependencies'
      
      - script: |
          playwright install chromium
        displayName: 'Install Playwright Browsers'
      
      - task: AzureKeyVault@2
        displayName: 'Fetch Secrets from Azure Key Vault'
        inputs:
          azureSubscription: 'FourHands-AzureServiceConnection'
          KeyVaultName: 'fourhands-qa-keyvault'
          SecretsFilter: 'D365-USERNAME,D365-PASSWORD,FH-USERNAME,FH-PASSWORD'
          RunAsPreJob: true
      
      - script: |
          export D365_BASE_URL="$(D365-BASE-URL)"
          export D365_USERNAME="$(D365-USERNAME)"
          export D365_PASSWORD="$(D365-PASSWORD)"
          export FH_BASE_URL="$(FH-BASE-URL)"
          export FH_USERNAME="$(FH-USERNAME)"
          export FH_PASSWORD="$(FH-PASSWORD)"
          export HEADED=false
          export TIMEOUT=30000
          
          pytest tests/ -m smoke -v \
            --alluredir=reports/allure-results \
            --maxfail=3 \
            --tb=line
        displayName: 'Run Smoke Tests'
        continueOnError: false
      
      - task: PublishTestResults@2
        displayName: 'Publish Test Results'
        condition: always()
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: 'reports/junit/*.xml'
          testRunTitle: 'PR Smoke Tests - $(Build.BuildNumber)'
          failTaskOnFailedTests: true
      
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Test Artifacts'
        condition: always()
        inputs:
          PathtoPublish: 'test-results'
          ArtifactName: 'pr-test-results'
          publishLocation: 'Container'
      
      - script: |
          echo "##[section]PR Validation Summary"
          echo "Build: $(Build.BuildNumber)"
          echo "Source Branch: $(System.PullRequest.SourceBranch)"
          echo "Target Branch: $(System.PullRequest.TargetBranch)"
          echo "PR ID: $(System.PullRequest.PullRequestId)"
        displayName: 'Print Summary'
        condition: always()
