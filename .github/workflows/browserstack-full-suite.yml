name: BrowserStack Full Suite

on:
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: true
        default: 'smoke'
        type: choice
        options:
          - smoke
          - e2e
          - d365
          - fh
          - all
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC

jobs:
  browserstack-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        playwright install chromium
    
    - name: Install BrowserStack SDK
      run: |
        npm install -g browserstack-sdk
    
    - name: Verify BrowserStack Configuration
      run: |
        echo "Checking browserstack.yml..."
        cat browserstack.yml
    
    - name: Run Smoke Tests on BrowserStack
      if: github.event.inputs.test_suite == 'smoke' || github.event.inputs.test_suite == '' || github.event_name == 'schedule'
      env:
        BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
        BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        D365_USERNAME: ${{ secrets.D365_USERNAME }}
        D365_PASSWORD: ${{ secrets.D365_PASSWORD }}
        HEADED: false
      run: |
        echo "Running smoke tests on BrowserStack..."
        browserstack-sdk pytest -m smoke -v --tb=short
    
    - name: Run E2E Tests on BrowserStack
      if: github.event.inputs.test_suite == 'e2e'
      env:
        BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
        BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        D365_USERNAME: ${{ secrets.D365_USERNAME }}
        D365_PASSWORD: ${{ secrets.D365_PASSWORD }}
        HEADED: false
      run: |
        echo "Running E2E tests on BrowserStack..."
        browserstack-sdk pytest -m e2e -v --tb=short
    
    - name: Run D365 Tests on BrowserStack
      if: github.event.inputs.test_suite == 'd365'
      env:
        BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
        BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        D365_USERNAME: ${{ secrets.D365_USERNAME }}
        D365_PASSWORD: ${{ secrets.D365_PASSWORD }}
        HEADED: false
      run: |
        echo "Running D365 tests on BrowserStack..."
        browserstack-sdk pytest tests/d365/ -v --tb=short
    
    - name: Run FourHands Tests on BrowserStack
      if: github.event.inputs.test_suite == 'fh'
      env:
        BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
        BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        D365_USERNAME: ${{ secrets.D365_USERNAME }}
        D365_PASSWORD: ${{ secrets.D365_PASSWORD }}
        HEADED: false
      run: |
        echo "Running FourHands tests on BrowserStack..."
        browserstack-sdk pytest tests/fh/ -v --tb=short
    
    - name: Run All Tests on BrowserStack
      if: github.event.inputs.test_suite == 'all'
      env:
        BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
        BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        D365_USERNAME: ${{ secrets.D365_USERNAME }}
        D365_PASSWORD: ${{ secrets.D365_PASSWORD }}
        HEADED: false
      run: |
        echo "Running all tests on BrowserStack..."
        browserstack-sdk pytest tests/ -v --tb=short
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: browserstack-test-results
        path: |
          test-results/
          reports/
          allure-results/
        if-no-files-found: ignore
    
    - name: Generate Allure Report
      if: always()
      run: |
        # Install Allure if not present
        if ! command -v allure &> /dev/null; then
          echo "Installing Allure..."
          wget https://github.com/allure-framework/allure2/releases/download/2.24.1/allure-2.24.1.tgz
          tar -zxvf allure-2.24.1.tgz -C /opt/
          sudo ln -s /opt/allure-2.24.1/bin/allure /usr/bin/allure
        fi
        
        # Generate report if results exist
        if [ -d "allure-results" ]; then
          allure generate allure-results --clean -o allure-report
        fi
    
    - name: Upload Allure Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report/
        if-no-files-found: ignore
    
    - name: Print BrowserStack Dashboard Link
      if: always()
      run: |
        echo "========================================"
        echo "ðŸŽ¯ View results on BrowserStack Dashboard:"
        echo "https://automate.browserstack.com/dashboard"
        echo "========================================"
